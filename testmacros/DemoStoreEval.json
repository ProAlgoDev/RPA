{
  "CreationDate": "2018-1-26",
  "Commands": [
    {
      "Command": "store",
      "Target": "fast",
      "Value": "!replayspeed"
    },
    {
      "Command": "open",
      "Target": "https://a9t9.com/kantu/demo/storeeval",
      "Value": ""
    },
    {
      "Command": "assertText",
      "Target": "//*[@id=\"content\"]/div[2]/div/h2[1]",
      "Value": "Input box to display some results"
    },
    {
      "Command": "verifyText",
      "Target": "//*[@id=\"content\"]/div[2]/div/h2[1]",
      "Value": "Input box to display some results"
    },
    {
      "Command": "verifyTitle",
      "Target": "Selenium IDE store, storeEval, Demo Page",
      "Value": ""
    },
    {
      "Command": "assertTitle",
      "Target": "Selenium IDE store, storeEval, Demo Page",
      "Value": ""
    },
    {
      "Command": "echo",
      "Target": "storeEVAL can run Javascript... and store the result in a variable (optional)",
      "Value": ""
    },
    {
      "Command": "storeEval",
      "Target": "document.title = \"123\";",
      "Value": ""
    },
    {
      "Command": "assertTitle",
      "Target": "123",
      "Value": ""
    },
    {
      "Command": "echo",
      "Target": "First some basic calculations with STORE",
      "Value": ""
    },
    {
      "Command": "store",
      "Target": "15",
      "Value": "AAA"
    },
    {
      "Command": "store",
      "Target": "10",
      "Value": "BBB"
    },
    {
      "Command": "storeEval",
      "Target": "storedVars['AAA']-storedVars['BBB']",
      "Value": "CCC"
    },
    {
      "Command": "echo",
      "Target": "${CCC}",
      "Value": ""
    },
    {
      "Command": "storeEval",
      "Target": "document.title = \"${CCC}\";",
      "Value": ""
    },
    {
      "Command": "assertTitle",
      "Target": "5",
      "Value": ""
    },
    {
      "Command": "echo",
      "Target": "storedVars gives access to VARIABLE, ${...} to VALUE",
      "Value": ""
    },
    {
      "Command": "store",
      "Target": "SELenium IDe",
      "Value": "AAA"
    },
    {
      "Command": "storeEval",
      "Target": "storedVars['AAA'].toUpperCase()",
      "Value": "CCC"
    },
    {
      "Command": "echo",
      "Target": "${CCC}",
      "Value": ""
    },
    {
      "Command": "type",
      "Target": "id=sometext",
      "Value": "${CCC}"
    },
    {
      "Command": "echo",
      "Target": "Generate TODAYs date in in YYYY-MM-DD format ",
      "Value": ""
    },
    {
      "Command": "storeEval",
      "Target": "var d= new Date(); var m=((d.getMonth()+1)<10)?'0'+(d.getMonth()+1):(d.getMonth()+1); d.getFullYear()+\"-\"+m+\"-\"+d.getDate();",
      "Value": "mydate"
    },
    {
      "Command": "echo",
      "Target": "Today is ${mydate}",
      "Value": ""
    },
    {
      "Command": "echo",
      "Target": "Pick a random item from a list, useful for data-driven testing",
      "Value": ""
    },
    {
      "Command": "storeEval",
      "Target": "new Array ('cat','dog','fish','dog','??','frog','?','dog','??','horse','??elephant')",
      "Value": "names"
    },
    {
      "Command": "storeEval",
      "Target": "storedVars['names'].length",
      "Value": "length"
    },
    {
      "Command": "echo",
      "Target": "array length = ${length}",
      "Value": ""
    },
    {
      "Command": "storeEval",
      "Target": "Math.floor(Math.random()*storedVars['length'])",
      "Value": "num"
    },
    {
      "Command": "echo",
      "Target": "num=${num}",
      "Value": ""
    },
    {
      "Command": "echo",
      "Target": "The next command picks the random item",
      "Value": ""
    },
    {
      "Command": "storeEval",
      "Target": "storedVars['names'][${num}]",
      "Value": "myrandomname"
    },
    {
      "Command": "store",
      "Target": "Today is ${mydate}, and we draw a ${myrandomname}",
      "Value": "output"
    },
    {
      "Command": "echo",
      "Target": "To is ${mydate}, and we draw a ${myrandomname}",
      "Value": "${output}"
    },
    {
      "Command": "type",
      "Target": "id=sometext",
      "Value": "${output}"
    }
  ]
}