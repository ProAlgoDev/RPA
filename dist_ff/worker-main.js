!function(e){var t={};function r(a){if(t[a])return t[a].exports;var n=t[a]={i:a,l:!1,exports:{}};return e[a].call(n.exports,n,n.exports,r),n.l=!0,n.exports}r.m=e,r.c=t,r.d=function(e,t,a){r.o(e,t)||Object.defineProperty(e,t,{configurable:!1,enumerable:!0,get:a})},r.r=function(e){Object.defineProperty(e,"__esModule",{value:!0})},r.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return r.d(t,"a",t),t},r.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},r.p="",r(r.s=2)}([function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0});t.HeapMemory=class{constructor(e){const t="BYTES_PER_ELEMENT"in e?e:new Uint8Array(e),r=t.length*t.BYTES_PER_ELEMENT,a=Module._malloc(r);this.heapBytes=Module.HEAPU8.subarray(a,a+r),this.heapBytes.set(t)}free(){Module._free(this.heapBytes.byteOffset)}get offset(){return this.heapBytes.byteOffset}get length(){return this.heapBytes.length}}},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0});class a{static create(e,t){return{id:a.nextId++,type:e,startTime:performance.now(),finishTime:0,args:t,result:void 0}}static complete(e,t){return{id:e.id,type:e.type,startTime:e.startTime,finishTime:performance.now(),args:e.args,result:t}}}a.nextId=1,t.JobFactory=a},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0});const a=r(1),n=r(0);self.onmessage=function(e){const t=e.data;switch(t.type){case 1:const e=t.data;let r;switch(e.type){case 0:r=function(e){let t;const r=new n.HeapMemory(e);try{t=teamdocs.readImageInfo(r.offset,r.length)}finally{r.free()}return t}(e.args.image);break;case 1:{const t=e.args;r=function(e,t,r){const a=new teamdocs.Image(e.width,e.height);a.data.set(e.data);const n=teamdocs.resizeImage(a,t,r),s=new Uint8ClampedArray(n.data);return new ImageData(s,n.width,n.height)}(t.image,t.scaleX,t.scaleY);break}case 2:{const t=e.args;r=function(e,t,r,a){const n=new teamdocs.Image(e.width,e.height);n.data.set(e.data);const s=new teamdocs.Image(t.width,t.height);s.data.set(t.data);const o=teamdocs.searchImage(n,s,r,a);return n.delete(),s.delete(),o}(t.image,t.pattern,t.minSimilarity,t.allowSizeVariation);break}default:throw Error(`Unsupported job type: ${e.type}`)}const s={type:1,data:a.JobFactory.complete(e,r)};self.postMessage(s);break;default:throw Error(`Unsupported message type: ${t.type}`)}},self.onerror=function(e){console.error("Worker.onerror:",e)}}]);